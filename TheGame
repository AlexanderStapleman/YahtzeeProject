# Alexander Stapleman - Yahtzee Game
# Yahtzee Game Rules ====  https://www.hasbro.com/common/instruct/yahtzee.pdf
# Author Owns No Rights to Yahtzee

from random import randrange
from time import sleep


class ScoreCard:
    def __init__(self, PlayerNumber):
        self.PlayerNumber = PlayerNumber
        self.Points = 0
        self.BonusYahtzee = 0
        self.Card = {
            # Upper Section
            'Aces': 0,
            'Twos': 0,
            'Threes': 0,
            'Fours': 0,
            'Fives': 0,
            'Sixes': 0,
            # Lower Section
            '3 of a Kind': 0,
            '4 of a Kind': 0,
            'Full House': 0,
            'Small Straight': 0,
            'Large Straight': 0,
            'YAHTZEE': 0,
            'Chance': 0,
        }

    def print(self):
        print('\n#########################')
        print('Scorecard for Player', self.PlayerNumber)
        print("Upper Section")
        print('#############')
        print('Aces: ', self.Card['Aces'])
        print('Twos:', self.Card['Twos'])
        print('Threes:', self.Card['Threes'])
        print('Fours:', self.Card['Fours'])
        print('Fives:', self.Card['Fives'])
        print('Sixes:', self.Card['Sixes'])
        print('#############')
        print('Lower Section')
        print('#############')
        print('3 of a Kind:', self.Card['3 of a Kind'])
        print('4 of a Kind:', self.Card['4 of a Kind'])
        print('Full House:', self.Card['Full House'])
        print('Small Straight:', self.Card['Small Straight'])
        print('Large Straight:', self.Card['Large Straight'])
        print('YAHTZEE:', self.Card['YAHTZEE'])
        print('Chance:', self.Card['Chance'])
        print('#########################\n', )

    def CalculateFinalScore(self):
        for x in self.Card:
            self.Points = self.Card[x] + self.Points
        print(self.Points)

def main():
    GameModeSelect = 0

    # GameMode Selection/Input Error Checking

    print('Welcome to my game of Yahtzee')
    try:
        try:
            GameModeSelect = input('Please select a game mode \n   1 Player = 1 \n   2 Player = 2 \n')
            if int(GameModeSelect) == 1:
                OnePlayerMode()
            elif int(GameModeSelect) == 2:
                TwoPlayerMode()
            else:
                print(str(GameModeSelect) + ' is not a valid input, Valid game modes are "1" or "2"')
                sleep(1)
                main()
        except ValueError as e:
            print(str(GameModeSelect) + ' is not a valid input, Valid game modes are "1" or "2"')
            print(e)
            sleep(1)
            main()
    except BaseException as e:
        print(e)


# One Player Mode
def OnePlayerMode():
    # Starting variables and declarations
    PlayerNumber = 1

    # Player Score card created
    PlayerOneScoreCard = ScoreCard(PlayerNumber)
    PlayerOneScoreCard.print()

    # Creating a turn count to manage length of game
    TurnTracker = 1

    # Initial Dice State
    DiceState = {"die1": 0, "die2": 0, "die3": 0, "die4": 0, "die5": 0}

    # Start Game
    while TurnTracker < 14:
        print("It is turn", TurnTracker)
        TurnTracker += 1
        TakeTurn(DiceState, PlayerOneScoreCard)


def TwoPlayerMode():
    print("Two player not yet implemented")
    main()


def TakeTurn(DiceState, PlayerScoreCard):

    # Create list of dice to keep
    Keepers = []

    # How many rolls have happened this turn
    rollCount = 1

    # Turn's first roll of all dice
    DiceState = DiceRolling(DiceState, 0)
    CommonPrinter(DiceState, 0)

    # Used to decide if player manually scored without continuing to reroll.
    AlreadyScored = False

    # Iterate rolls
    for x in range(1, 4):

        # Ends turn if already scored this roll
        if AlreadyScored is True: break

        print("Currently on roll", rollCount)

        # Increment Rolls
        rollCount += 1

        # While loop for input error checking
        inputCheck = False
        if x < 3:
            while inputCheck is False:
                ScoreQuestion = input("Would you like to score now? y/n: ")
                if ScoreQuestion == "y" or ScoreQuestion == "Y":
                    print("Time to score.")
                    Score(PlayerScoreCard, DiceState)
                    AlreadyScored = True
                    break
                    # score here
                elif ScoreQuestion == "n" or ScoreQuestion == "N":
                    inputCheck = True
                    # Used to determine if entered dice to roll are valid
                    KeeperCheck = False
                    while KeeperCheck is False:
                        Keepers = [int(y) if y.isnumeric() else '' for y in
                                   input("Which dice would you like to keep? Separate dice with spaces.").split()]
                        KeeperCheck, Keepers = DiceToRerollCheck(Keepers)
                    # Reroll
                    DiceRolling(DiceState, 1, Keepers)
                    CommonPrinter(DiceState, 0)
                else:
                    print("Invalid input, Only enter 'y' or 'n'")
        else:
            # Score
            print("Time to score.")
            print()
            print("Need To Implement Scoring Here")
            print()
            Score(PlayerScoreCard, DiceState)


def DiceRolling(DiceState, Mode, *DiceToKeep):
    # Reroll all dice
    if Mode == 0:
        for x in range(0, len(DiceState)):
            die = randrange(1, 7)
            DieToChange = format("die" + str(x + 1))
            DiceState.update({DieToChange: die})
        return DiceState
    # Reroll only selected dice
    if Mode == 1:
        # print(DiceState)
        diceToKeep = list(DiceToKeep[0])
        diceConversionToString = {
            1: "1",
            2: "2",
            3: "3",
            4: "4",
            5: "5",
            6: "6"
        }
        dice = [1, 2, 3, 4, 5]
        for die in diceToKeep:
            if diceToKeep.__contains__(die):
                dice.remove(int(die))
        # print(dice)
        for x in dice:
            die = randrange(1, 7)
            DieToChange = format("die" + str(diceConversionToString[x]))
            DiceState.update({DieToChange: die})
        # print(DiceState)


def Score(PlayerScoreCard, DiceState):
    # Initial Scoring
    PlayerScoreCard.print()
    CommonPrinter(DiceState, 1)

    # D

def DiceToRerollCheck(DiceList):
    # print(DiceList)
    if len(DiceList) > 5:
        print("Too many arguments try again")
        return False, DiceList
    PassCheck = False
    for die in DiceList:
        if not isinstance(die, int):
            print("Only Numbers Allowed")
            return False, DiceList
        elif int(die) > 5 or int(die) < 0:
            print("Only Numbers between 1-5 allowed")
            return False, DiceList
        else:
            PassCheck = True
    return PassCheck, DiceList


def CommonPrinter(DiceState, Mode):
    # Starting Print
    # Mode used to define the following
    # Mode 0 Dice Rolling
    if Mode == 0:
        for x in range(1, 6):
            DieToPrint = format("die" + str(x))
            print("Rolling die ", str(x), end='')
            for p in range(0, 3):
                sleep(.1)
                print('.', end='')
            sleep(.1)
            print(" ", DiceState[DieToPrint], )
        print()
    # Mode 1 Print Dice State
    if Mode == 1:
        pass


if __name__ == "__main__":
    main()
